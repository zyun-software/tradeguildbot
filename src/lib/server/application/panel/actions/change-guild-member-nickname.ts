import { ApiAction, getDefaultApiActionResult, type ApiActionExecuteType } from '../../api';
import { DependencyInjection } from '../../dependency-injection';
import { regex } from '../../regex';

export class ChangeGuildMemberNicknameAction extends ApiAction<
	{
		guild_id: number;
		old: string;
		new: string;
	},
	string
> {
	public async execute(): Promise<ApiActionExecuteType<string>> {
		const guildRepository = DependencyInjection.GuildRepository;
		const guildMemberRepository = DependencyInjection.GuildMemberRepository;
		const telegram = DependencyInjection.RequestRepository.telegram;
		const result = getDefaultApiActionResult<string>();

		if (!regex.minecraftNickname.test(this._data.new)) {
			result.error = '–ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ –≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –ø—Å–µ–≤–¥–æ–Ω—ñ–º—É';
			return result;
		}

		const exists = await guildMemberRepository.findByNameAndGuildId(
			this._data.new,
			this._data.guild_id
		);

		if (exists) {
			result.error = '–¢–∞–∫–∏–π –ø—Å–µ–≤–¥–æ–Ω—ñ–º –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è';
			return result;
		}

		const find = await guildMemberRepository.findByNameAndGuildId(
			this._data.old,
			this._data.guild_id
		);

		if (!find) {
			result.error = '–ß–ª–µ–Ω–∞ –≥—ñ–ª—å–¥—ñ—ó, –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º –ø—Å–µ–≤–¥–æ–Ω—ñ–º–æ–º, –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ';
			return result;
		}

		const guild = await guildRepository.getById(find.guild_id);

		const oldNickname = find.name;
		await find.setName(this._data.new);
		await telegram('sendMessage', {
			chat_id: find.user_id,
			text: `‚úçüèª –í–∞—à –ø—Å–µ–≤–¥–æ–Ω—ñ–º –±—É–ª–æ –∑–º—ñ–Ω–µ–Ω–æ –≤ –≥—ñ–ª—å–¥—ñ—ó *${guild.name}* –∑ *${oldNickname}* –Ω–∞ *${find.name}*`
		});

		result.success = true;
		result.response = '‚úÖ –ü—Å–µ–≤–¥–æ–Ω—ñ–º –±—É–ª–æ –∑–º—ñ–Ω–µ–Ω–æ';

		return result;
	}
}
