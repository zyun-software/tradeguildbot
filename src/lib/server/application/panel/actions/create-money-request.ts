import type { MoneyType } from '$lib/server/domain';
import { ApiAction, getDefaultApiActionResult, type ApiActionExecuteType } from '../../api';
import { DependencyInjection } from '../../dependency-injection';

export class CreateMoneyRequestAction extends ApiAction<
	{
		guild_id: number;
		name: string;
		currency_id: number;
		amount: number;
		type: 'introduction' | 'receiving';
	},
	string
> {
	public async execute(): Promise<ApiActionExecuteType<string>> {
		const telegram = DependencyInjection.RequestRepository.telegram;
		const guildRepository = DependencyInjection.GuildRepository;
		const moneyService = DependencyInjection.MoneyService;
		const result = getDefaultApiActionResult<string>();

		let money: MoneyType;

		try {
			money = await moneyService.getByNameAndCurrencyIdAndGuildId(
				this._data.name,
				this._data.currency_id,
				this._data.guild_id
			);
		} catch (error: any) {
			result.error = error.message;
			return result;
		}

		if (money.guild_member.user_id !== this._user.id) {
			result.error = '–í–∏ –Ω–µ –º–æ–∂–µ—Ç–µ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–ø–∏—Ç –∫–æ—à—Ç—ñ–≤ –¥–ª—è —ñ–Ω—à–æ—ó –ª—é–¥–∏–Ω–∏';
			return result;
		}

		if (money.account.money_request) {
			result.error = '–ü–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ—á–µ–∫–∞—Ç–∏—Å—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–ø–∏—Ç—É –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—à—Ç—ñ–≤';
			return result;
		}

		if (!['introduction', 'receiving'].includes(this._data.type)) {
			result.error = '–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø –∑–∞–ø–∏—Ç—É –æ—Ç—Ä–∏–º—É–≤–∞–Ω–Ω—è –∫–æ—à—Ç—ñ–≤';
			return result;
		}

		if (typeof this._data.amount !== 'number') {
			result.error = '–°—É–º—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —á–∏—Å–ª–æ–º';
			return result;
		}

		if (this._data.amount < 1) {
			result.error = '–°—É–º–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –±—ñ–ª—å—à–µ –Ω—É–ª—è';
			return result;
		}

		if (this._data.type === 'receiving') {
			if (money.account.balance < this._data.amount) {
				result.error = '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—å–æ–≥–æ –∑–∞–ø–∏—Ç—É';
				return result;
			}

			await money.account.removeFromBalance(this._data.amount);
			await money.account.addToReserve(this._data.amount);
		}

		await money.account.setMoneyRequest(true);
		await money.account.setMoneyRequestType(this._data.type);
		await money.account.setMoneyRequestAmount(this._data.amount);

		const guild = await guildRepository.getById(money.guild_member.guild_id);

		await telegram('sendMessage', {
			chat_id: guild.owner_id,
			text:
				'ü§≤ –û—Ç—Ä–∏–º–∞–Ω–æ –∑–∞–ø–∏—Ç –∫–æ—à—Ç—ñ–≤\n\n' +
				`üèõÔ∏è –ì—ñ–ª—å–¥—ñ—è: *${guild.name}*\n` +
				`üè∑Ô∏è –û—Ç—Ä–∏–º—É–≤–∞—á: \`${money.guild_member.name}\`\n` +
				`üî† –¢–∏–ø: *${
					this._data.type === 'introduction' ? '–í–Ω–µ—Å–µ–Ω–Ω—è –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫' : '–û—Ç—Ä–∏–º–∞–Ω–Ω—è –≥–æ—Ç—ñ–≤–∫–∏'
				}*\n` +
				`üí∞ –°—É–º–∞: *${this._data.amount} ${money.currency.code}*`
		});

		result.success = true;
		result.response = '‚úÖ –ó–∞–ø–∏—Ç –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—à—Ç—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ';

		return result;
	}
}
