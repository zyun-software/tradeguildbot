import { DONATE_URL, PANEL_URL } from '$env/static/private';
import { DependencyInjection } from '$lib/server/application';
import type { UserEntity } from '$lib/server/domain';
import { TelegramBotAction } from '../../interfaces';

export class HomeRoute extends TelegramBotAction<any> {
	public async handleExecute(user: UserEntity): Promise<string | void> {
		const telegram = DependencyInjection.RequestRepository.telegram;
		const button = {
			donate: 'üí∏ –ü–æ–¥—è–∫—É–≤–∞—Ç–∏'
		};

		switch (this._data.message.text) {
			case button.donate:
				return await telegram('sendMessage', {
					chat_id: user.id,
					text: `[–ü–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤](${DONATE_URL})`
				});
			default:
				await telegram('setChatMenuButton', {
					chat_id: user.id,
					menu_button: {
						type: 'web_app',
						text: '–ü–∞–Ω–µ–ª—å',
						web_app: {
							url: PANEL_URL
						}
					}
				});

				await telegram('sendMessage', {
					chat_id: user.id,
					text: 'üí° –î–ª—è —Ç–æ–≥–æ —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ —É—Å—ñ—Ö –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É *–ü–∞–Ω–µ–ª—å*',
					reply_markup: {
						keyboard: [[button.donate]],
						resize_keyboard: true
					}
				});
		}
	}
}
